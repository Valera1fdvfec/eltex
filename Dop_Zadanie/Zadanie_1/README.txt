Задание 1: raw sockets + САОД + signals

Написать echo-client и echo-server на raw сокетах. Сервер должен отвечать клиенту то же самое сообщение + порядковый номер сообщения от этого клиента. Протокол сообщения - UDP.

Например:
Клиент 1 посылает на сервер сообщение “WAAAAAAAGH”
Сервер отвечает клиенту 1 “WAAAAAAAGH 1”
Клиент 1 посылает серверу сообщение “ping”
Сервер отвечает клиенту 1 “ping 2”
Клиент 2 посылает серверу сообщение “ping”
Сервер отвечает клиенту 2 “ping 1”
Клиент 1 посылает на сервер сообщение “WAAAAAAAGH”
Сервер отвечает клиенту 1 “WAAAAAAAGH 3”

При штатном выключении клиент должен посылать серверу сообщение о закрытии, после получения этого сообщения сервер должен сбросить связанные с данным клиентом счетчики и при последующем подключении клиента с тем же ip:port, начинать отсчет с 1.

Описание добавленных файлов:

	server.h: Заголовочный файл, содержащий структуры для IP (ip_header) и UDP (udp_header) заголовков, константы для портов сервера (12345) и клиента (54321), а также размера буфера (4096). Определяет функции checksum для вычисления контрольной суммы IP-заголовка и udp_checksum для UDP с псевдозаголовком.

	raw_socket.c: Файл с реализацией функций для вычисления контрольных сумм. Функция checksum вычисляет контрольную сумму для IP или UDP заголовков, суммируя 16-битные слова и сворачивая результат. Функция udp_checksum создает псевдозаголовок и вычисляет контрольную сумму для UDP-пакета, включая данные.

	server.c: Реализация сервера, использующего сырые сокеты для обработки UDP-пакетов. Поддерживает до двух клиентов, отслеживает их IP, порт и количество отправленных сообщений (максимум 10). Обрабатывает сообщения, отправляет ответы с номером сообщения и уведомляет других клиентов о подключении/отключении. При получении "exit" удаляет клиента.

	client1.c: Реализация первого клиента, использующего сырые сокеты для отправки UDP-пакетов на сервер (порт 12345). Читает ввод пользователя, формирует IP и UDP заголовки, вычисляет контрольные суммы и отправляет пакеты. Ожидает ответа от сервера, фильтруя пакеты по порту (54321). При завершении (Ctrl+C или нормальное) отправляет сообщение "exit".

	client2.c: Реализация второго клиента, аналогичного client1.c, но использующего порт 54322. Отправляет UDP-пакеты на сервер, формируя IP и UDP заголовки, вычисляет контрольные суммы, ожидает ответа, фильтруя пакеты по своему порту. Отправляет "exit" при завершении.
